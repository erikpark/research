library(ggplot2)
library(broom)
library(tidyr)
library(gridExtra)
swap.orig <- read.csv("Microbiome swap data - Sheet1.csv")
treatments <- swap.orig$Treatment.ID
dead <- swap.orig[swap.orig$Dead. == "y",]
alive <- swap.orig[swap.orig$Dead. == "",]
alive$Treatment.ID <- as.factor(alive$Treatment.ID)
alive$LT <- as.numeric(alive$LT)
gg <- swap.orig[swap.orig$Treatment.ID == "gg",]
gs <- swap.orig[swap.orig$Treatment.ID == "gs",]
ss <- swap.orig[swap.orig$Treatment.ID == "ss",]
sg <- swap.orig[swap.orig$Treatment.ID == "sg",]
gg.survival <- (nrow(gg) - (sum(gg$Dead. == "y"))) / nrow(gg)
gs.survival <- (nrow(gs) - (sum(gs$Dead. == "y"))) / nrow(gs)
ss.survival <- (nrow(ss) - (sum(ss$Dead. == "y"))) / nrow(ss)
sg.survival <- (nrow(sg) - (sum(sg$Dead. == "y"))) / nrow(sg)
survivals <- c(gg.survival,gs.survival,ss.survival,sg.survival)
survivals <- as.data.frame(survivals)
survivals$treatment <- c("gg", "gs", "ss", "sg")
survivals
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot()
ggplot(alive, aes(x = Treatment.ID, y = LW)) + geom_boxplot()
ggplot(alive, aes(x = Treatment.ID, y = PT)) + geom_boxplot()
ggplot(alive, aes(x = Treatment.ID, y = PW)) + geom_boxplot()
ggplot(alive, aes(x = Treatment.ID, y = AT)) + geom_boxplot()
ggplot(alive, aes(x = Treatment.ID, y = ATW)) + geom_boxplot()
ggplot(survivals, aes(x = treatment, y = survivals)) + geom_boxplot()
lirbary(plyr)
lirbrary(plyr)
library(plyr)
stat_compare_means()
library(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
unloadNamespace(tibble)
unloadNamespace("tibble")
unloadNamespace("ggplot2")
library(ggpubr)
unloadNamespace("tibble")
unloadNamespace("ggplot2")
library(broom)
library(ggpubr)
library(plyr)
library(gridExtra)
library(tidyr)
library(ggplot2)
library(broom)
library(tidyr)
library(gridExtra)
library(plyr)
library(ggpubr)
stat_compare_means()
?stat_compare_means
library(ggpubr)
swap.orig <- read.csv("Microbiome swap data - Sheet1.csv")
treatments <- swap.orig$Treatment.ID
dead <- swap.orig[swap.orig$Dead. == "y",]
alive <- swap.orig[swap.orig$Dead. == "",]
alive$Treatment.ID <- as.factor(alive$Treatment.ID)
alive$LT <- as.numeric(alive$LT)
gg <- swap.orig[swap.orig$Treatment.ID == "gg",]
gs <- swap.orig[swap.orig$Treatment.ID == "gs",]
ss <- swap.orig[swap.orig$Treatment.ID == "ss",]
sg <- swap.orig[swap.orig$Treatment.ID == "sg",]
gg.survival <- (nrow(gg) - (sum(gg$Dead. == "y"))) / nrow(gg)
gs.survival <- (nrow(gs) - (sum(gs$Dead. == "y"))) / nrow(gs)
ss.survival <- (nrow(ss) - (sum(ss$Dead. == "y"))) / nrow(ss)
sg.survival <- (nrow(sg) - (sum(sg$Dead. == "y"))) / nrow(sg)
survivals <- c(gg.survival,gs.survival,ss.survival,sg.survival)
survivals <- as.data.frame(survivals)
survivals$treatment <- c("gg", "gs", "ss", "sg")
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9),
fun.data = fun_length, geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9),
fun.data = alive geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9),
fun.data = alive, geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
fun_length <- function(x){
return(data.frame(y=median(x),label= paste0("n=", length(x))))
}
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(1), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(20), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
.9
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +3, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +2, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position = 0, fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1, size = 4)
ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(ggpubr)
library(gridExtra)
setwd("/media/removable/USB Drive/Research/")
swap.orig <- read.csv("Microbiome swap data - Sheet1.csv")
treatments <- swap.orig$Treatment.ID
dead <- swap.orig[swap.orig$Dead. == "y",]
alive <- swap.orig[swap.orig$Dead. == "",]
alive$Treatment.ID <- as.factor(alive$Treatment.ID)
alive$LT <- as.numeric(alive$LT)
gg <- swap.orig[swap.orig$Treatment.ID == "gg",]
gs <- swap.orig[swap.orig$Treatment.ID == "gs",]
ss <- swap.orig[swap.orig$Treatment.ID == "ss",]
sg <- swap.orig[swap.orig$Treatment.ID == "sg",]
gg.survival <- (nrow(gg) - (sum(gg$Dead. == "y"))) / nrow(gg)
gs.survival <- (nrow(gs) - (sum(gs$Dead. == "y"))) / nrow(gs)
ss.survival <- (nrow(ss) - (sum(ss$Dead. == "y"))) / nrow(ss)
sg.survival <- (nrow(sg) - (sum(sg$Dead. == "y"))) / nrow(sg)
survivals <- c(gg.survival,gs.survival,ss.survival,sg.survival)
survivals <- as.data.frame(survivals)
survivals$treatment <- c("gg", "gs", "ss", "sg")
fun_length <- function(x){
return(data.frame(y=median(x),label= paste0("n=", length(x))))
}
a <- ggplot(alive, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to L3 for survivors only")
c <- ggplot(alive, aes(x = Treatment.ID, y = LW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.1, size = 4) + labs(title = "Weight at L3 day 3 for survivors only")
e <- ggplot(alive, aes(x = Treatment.ID, y = PT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to pupation for survivors only")
g <- ggplot(alive, aes(x = Treatment.ID, y = PW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.1, size = 4) + labs(title = "Weight at P day 3 for survivors only")
b <- ggplot(swap.orig, aes(x = Treatment.ID, y = LT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to L3 for all individuals")
d <- ggplot(swap.orig, aes(x = Treatment.ID, y = LW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.1, size = 4) + labs(title = "Weight at L3 day 3 for all individuals")
f <- ggplot(swap.orig, aes(x = Treatment.ID, y = PT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to pupation for all individuals")
h <- ggplot(swap.orig, aes(x = Treatment.ID, y = PW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.1, size = 4) + labs(title = "Weight at P day 3 for all individuals")
grid.arrange(a,b)
grid.arrange(c,d)
grid.arrange(a,b)
a
grid.arrange(a,b, ncol = 2)
a
b
grid.arrange(a,b, ncol = 2)
grid.arrange(c,d, ncol = 2)
grid.arrange(e,f, ncol = 2)
grid.arrange(g,h, ncol = 2)
ggplot(alive, aes(x = Treatment.ID, y = AT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to adult eclosion")
ggplot(alive, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width")
ggvgs.surv <- prop.test(x = c((nrow(gg) - (sum(gg$Dead. == "y"))), (nrow(gs) - (sum(gs$Dead. == "y")))), n = c(nrow(gg), nrow(gs)))
ggvgs.surv
ssvsg.surv <- prop.test(x = c((nrow(ss) - (sum(ss$Dead. == "y"))), (nrow(sg) - (sum(sg$Dead. == "y")))), n = c(nrow(ss), nrow(sg)))
ssvsg.surv
ggplot(survivals, aes(x = treatment, y = survivals)) + geom_point()
ggvgs.surv
ssvsg.surv
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(ggpubr)
library(gridExtra)
swap.orig <- read.csv("Microbiome swap data - Sheet1.csv")
treatments <- swap.orig$Treatment.ID
dead <- swap.orig[swap.orig$Dead. == "y",]
alive$Treatment.ID <- as.factor(alive$Treatment.ID)
gg <- swap.orig[swap.orig$Treatment.ID == "gg",]
ss <- swap.orig[swap.orig$Treatment.ID == "ss",]
gg.survival <- (nrow(gg) - (sum(gg$Dead. == "y"))) / nrow(gg)
gs.survival <- (nrow(gs) - (sum(gs$Dead. == "y"))) / nrow(gs)
ss.survival <- (nrow(ss) - (sum(ss$Dead. == "y"))) / nrow(ss)
sg.survival <- (nrow(sg) - (sum(sg$Dead. == "y"))) / nrow(sg)
survivals <- c(gg.survival,gs.survival,ss.survival,sg.survival)
survivals <- as.data.frame(survivals)
survivals$treatment <- c("gg", "gs", "ss", "sg")
fun_length <- function(x){
return(data.frame(y=median(x),label= paste0("n=", length(x))))
}
swap.orig
View(swap.orig)
alive.female <- alive[alive$Sex == "f"]
alive[alive$Sex]
alive[alive$Sex == "f"]
alive[alive$Sex == "F"]
alive$Sex == "f"
alive.female <- alive[alive$Sex == "f",]
alive.male <- alive[alive$Sex == "m",]
View(alive.male)
View(alive.female)
me <- ggplot(alive.male, aes(x = Treatment.ID, y = AT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to adult eclosion - males only")
fe <- ggplot(alive.female, aes(x = Treatment.ID, y = AT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to adult eclosion - females only")
grid.arrange(me,fe, ncol = 2)
ggplot(alive, aes(x = Treatment.ID, y = AT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to adult eclosion")
grid.arrange(me,fe, ncol = 2)
ggplot(alive, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width")
mw <- ggplot(alive, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width")
fw <- ggplot(alive, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width")
mw <- ggplot(alive.male, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width - males only")
fw <- ggplot(alive/female, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width - females only")
fw <- ggplot(alive.female, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width - females only")
grid.arrange(mw,fw, ncol = 2)
grid.arrange(me,fe, ncol = 2)
ggplot(alive, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width")
grid.arrange(mw,fw, ncol = 2)
mfw <- grid.arrange(mw,fw, ncol = 2)
tw <- ggplot(alive, aes(x = Treatment.ID, y = ATW)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Adult thorax width")
grid.arrange(tw, mfw)
mfe <- grid.arrange(me,fe, ncol = 2)
ae <- ggplot(alive, aes(x = Treatment.ID, y = AT)) + geom_boxplot() + stat_compare_means(method = "wilcox.test", comparisons = list(c("gg","gs"), c("sg","ss"))) +
stat_summary(aes(x=factor(Treatment.ID)), position=position_dodge(.9), fun.data = fun_length,  geom = "text",
vjust = +1.5, size = 4) + labs(title = "Time to adult eclosion")
grid.arrange(ae, mfe)
grid.arrange(ae, mfe)
grid.arrange(tw, mfw)
grid.arrange(tw, mfw)
tw
grid.arrange(ae, mfe)
tw
grid.arrange(ae, mfe)
ae
grid.arrange(ae, mfe)
ae
grid.arrange(ae, mfe)
grid.arrange(tw, mfw)
getwd
getwd()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
grid.arrange(tw, mfw)
library(ggpubr)
install.packages("ggpubr")
install.packages("gridExtra")
